#pragma checksum "C:\Users\yordan.dyakov\source\repos\FFT\FFT\Views\Index\qft.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "d2731f9ad4175b40e7929329213b26b99a5f06e8"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Index_qft), @"mvc.1.0.view", @"/Views/Index/qft.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"d2731f9ad4175b40e7929329213b26b99a5f06e8", @"/Views/Index/qft.cshtml")]
    public class Views_Index_qft : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/Scripts/main.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral(@"<script type=""text/x-mathjax-config"">
    MathJax.Hub.Config({tex2jax: {inlineMath: [['$','$'], ['\\(','\\)']]}});
</script>
<script type=""text/javascript"" async
        src=""https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.4/latest.js?config=TeX-MML-AM_CHTML"">
</script>

<div class=""container"" style=""height: 100hv; background-color: black; color:white;"">
    <div style=""padding: 15px; width: 100%; height: 15vh; display: flex; flex-direction: row; align-self: center; align-items: center; justify-content: space-around; font-size: 80px; font-weight: 900;   margin: 0"">
        <span>QFT</span>

    </div>
    <div style=""padding: 15px; width: 100%; height: 70vh; display: flex; flex-direction: column; align-self: flex-start; align-items: center; justify-content: flex-start;  margin: 0"">
        <div id=""i1"" style=""width: 100%;
                    height: 90%;
                    width:50%;
                    display: flex;
                    flex-direction: column;
                    align-");
            WriteLiteral(@"self: center;
                    align-items: center;
                    justify-content: center;
                    margin: 0"">

            <span style=""font-size: 70px;"">
                $$ F_{n} = \frac{1} {\sqrt{n}} \begin{bmatrix}
                1 & 1 & 1 & 1 & 1 & . & .\\
                1 & \omega & {\omega}^2 & {\omega}^3 & {\omega}^4 & . & . \\
                1 & {\omega}^2 & {\omega}^4 & {\omega}^6 & {\omega}^8  & . & . \\
                1 & {\omega}^3 & {\omega}^6 & {\omega}^9 & {\omega}^{12}  & . & . \\
                1 & {\omega}^4 & {\omega}^8 & {\omega}^{12} & {\omega}^{16}  & . & .  \\
                . & . & . & . & .  & . & .  \\
                . & . & . & . & .  & . & .
                \end{bmatrix}  $$
            </span>

            <span style=""font-size: 70px;"">
                $${\omega} = \sqrt[n]{1} \neq 1 $$
            </span>

        </div>
        <div id=""i2"" style=""padding: 15px;  width: 100%;
                    height: 70vh;
                ");
            WriteLiteral(@"    width:50%;
                    display: flex;
                    flex-direction: column;
                    align-self: center;
                    align-items: center;
                    justify-content: center;
                    margin: 0"">

            <span style=""font-size: 70px; margin-top: -10px; margin-left: -190px;"">
                $$ F_{4} = \frac{1} {2} \begin{bmatrix}
                1 & 1 & 1 & 1 \\
                1 & i & -1 & -i \\
                1 & -1 & 1 & -1 \\
                1 & -i & -1 & i
                \end{bmatrix}  $$
            </span>

        </div>

        <div id=""i3"" style=""padding: 15px; width: 100%;
                    height: 70vh;
                    width:50%;
                    display: flex;
                    flex-direction: column;
                    align-self: center;
                    align-items: center;
                    justify-content: center;
                    margin: 0"">

            <span style=""font-size: 7");
            WriteLiteral(@"0px; margin-top: -10px; margin-left: -190px;"">
                $$
                \color{green}{\begin{bmatrix}
                0\\
                1\\
                0\\
                0
                \end{bmatrix}}

                \begin{bmatrix}
                \frac{1}{2} & \frac{1}{2} & \frac{1}{2} & \frac{1}{2} \\
                \frac{1}{2} & \frac{i}{2} & \frac{-1}{2} & \frac{-i}{2} \\
                \frac{1}{2} & \frac{-1}{2} & \frac{1}{2} & \frac{-1}{2} \\
                \frac{1}{2} & \frac{-i}{2} & \frac{-1}{2} & \frac{i}{2}
                \end{bmatrix}
                =
                \color{yellow}{\begin{bmatrix}
                \frac{1}{2} \\
                \frac{i}{2} \\
                \frac{-1}{2} \\
                \frac{-i}{2}
                \end{bmatrix}} $$
            </span>

        </div>


    </div>



</div>

<script type=""text/javascript"">
    var frward = '/qft';
    var backward = '/feature';
    var index = 0;
    $('#i1').hide()");
            WriteLiteral(@";
    $('#i2').hide();
    $('#i3').hide();

    $('body').keyup(function (e) {

        $('#i1').hide();
        $('#i2').hide();
        $('#i3').hide();

        if (e.keyCode == 32) {
            index++;
            if (index == 4) {
                index = 1;
            }
            $('#i' + index).show();
        }
    });


</script>
");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "d2731f9ad4175b40e7929329213b26b99a5f06e87522", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
