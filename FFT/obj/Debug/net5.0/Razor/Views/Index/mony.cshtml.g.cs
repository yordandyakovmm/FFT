#pragma checksum "C:\Users\yordan.dyakov\source\repos\FFT\FFT\Views\Index\mony.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "12605b528b2438db83a863e5d1ab239a990d12e6"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Index_mony), @"mvc.1.0.view", @"/Views/Index/mony.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"12605b528b2438db83a863e5d1ab239a990d12e6", @"/Views/Index/mony.cshtml")]
    public class Views_Index_mony : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/Scripts/main.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral(@"<script type=""text/x-mathjax-config"">
    MathJax.Hub.Config({tex2jax: {inlineMath: [['$','$'], ['\\(','\\)']]}});
</script>
<script type=""text/javascript"" async
        src=""https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.4/latest.js?config=TeX-MML-AM_CHTML"">
</script>

<div class=""container"">

    <div style=""padding-left:100px; width: 100%; height: 85%; display: flex; flex-direction: row; align-self: flex-start; align-items: flex-start; justify-content: flex-start;  margin: 0"">

        <div  style=""width: 50%; height: auto; display: flex; flex-direction: column; align-self: flex-start; align-items: flex-start; justify-content: flex-start;  margin: 0"">
            <div class=""grid"">
                <div class=""heder"">
                    <div class=""textbox"">
                        <label>Weigth</label>
                        <input type=""text"" id=""mony""");
            BeginWriteAttribute("value", " value=\"", 890, "\"", 898, 0);
            EndWriteAttribute();
            WriteLiteral(@">
                    </div>

                </div>
            </div>
            <div id=""result"" style=""display: flex; flex-direction: column"">



            </div>
        </div>
        <div style=""width: 50%; height: auto; display: flex; flex-direction: column; align-self: flex-start; align-items: flex-start; justify-content: flex-start;  margin: 0"">
            <div class=""grid"" style=""display:flex; flex-direction: row; justify-content: flex-start; align-items: flex-start"">
                <div class=""heder"" style=""min-width: 200px"" >
                    <div class=""textbox"">
                        <label>Weigth</label>
                        <input type=""text"" id=""mony1""");
            BeginWriteAttribute("value", " value=\"", 1606, "\"", 1614, 0);
            EndWriteAttribute();
            WriteLiteral(@">
                    </div>

                </div>
                <div class=""heder""  style=""min-width: 200px"">
                    <div class=""textbox"">
                        <label>Price</label>
                        <input type=""text"" id=""diverence""");
            BeginWriteAttribute("value", " value=\"", 1881, "\"", 1889, 0);
            EndWriteAttribute();
            WriteLiteral(@">
                    </div>

                </div>

            </div>
            <div id=""result2"" style=""display: flex; flex-direction: column"">



            </div>
        </div>



    </div>
</div>
<script type=""text/javascript"">

    var weigth = [7, 5, 4, 3]

    var arrResut = [];
    var initialValue = null;

    $('#mony').keyup(function (e) {
        if (e.keyCode == 13) {
            $('#result').html('')
            arrResut = [];
            initialValue = parseInt(this.value);
            calc(parseInt(this.value), 0, [0, 0, 0, 0])
        }
    });

    function div(n, d) {
        return (n - n % d) / (d);
    }

    function calc(value, index, res) {
        console.log(value, index, res);
       
        var result = res.slice();
        // result
        if (value == 0) {
            
            arrResut.push(result);
            return;
        }

        if (value < weigth[index] || index > 3) {
            if (index >= 3) {
       ");
            WriteLiteral(@"         // exit no result
                return;
            }

            calc(value, ++index, result);
            return;
        }

        var holePart = div(value, weigth[index]);

        while (holePart >= 0) {
            result[index] = holePart;
            calc(value - result[index] * weigth[index], index+1, result.slice());
            holePart--;
        }

        if (index == 0 && initialValue == value) {
            var htmlLresult = '';
            for (var k = 0; k <= Math.min(30, arrResut.length); k++) {
                total = arrResut[k][0] + arrResut[k][1] * 0.5 + arrResut[k][2] * 0.2 + arrResut[k][3] * 0.1;
                htmlLresult += '<span> <b> всичко: ' + total.toFixed(2) + ' </b>: --- ' + arrResut[k][0] + 'x1лв, ' + arrResut[k][1] + 'x50ст, ' + arrResut[k][2] + 'x20ст, ' + arrResut[k][3] + 'x10ст</span>';
            }
            $('#result').html(htmlLresult);
        }
    }

</script>
");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "12605b528b2438db83a863e5d1ab239a990d12e67267", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
