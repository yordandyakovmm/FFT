<div class="container">
    <div class="theme" style="padding: 50px 0 ; font-size: 40px; font-weight: 900; height: 100%; width: 100%; display: flex; flex-direction: column; align-items: center;  justify-content: space-between; color: white; background-color:black">
        <div style="width: 100%; display: flex; flex-direction: row;  align-self: flex-start; align-items: center; justify-content: center;  margin: 0">
            <div style="border-top: solid; width: 80%; border-bottom-color: white; border-top-width: 2px;"></div>
        </div>
        <div class="convoluteRow">
            <canvas id="c1" data="mouse.png"></canvas>
            <span>*</span>
            <div class="matrixWrapper">
                <div class="multiplayer">
                    <span style="margin-left: 7px;">1</span>
                    <span>------</span>
                    <input id="common1" value="9" />
                </div>
                <div class="matrix" id="m1">
                    <div>
                        <input value="2" />
                        <input value="2" />
                        <input value="2" />
                    </div>
                    <div>
                        <input value="2" />
                        <input value="2" />
                        <input value="2" />
                    </div>
                    <div>
                        <input value="2" />
                        <input value="2" />
                        <input value="2" />
                    </div>
                </div>
            </div>
            <span> = </span>
            <div>
                <div style="position: absolute; margin-top:  40px; margin-left: 40px; height: 100px; width: 100px;" class="loader"></div>
                <canvas height="200px" width="200px" id="c1-result" style="cursor: pointer; border: solid 1px white" onclick="convolute1()"></canvas>
            </div>
        </div>

    </div>


</div>
<script type="text/javascript">
    var frward = '/gps1';
    var backward = '/identities';

    var image = new Image();
    var canvas1 = document.getElementById('c1');
    var context1 = canvas1.getContext('2d');
    var canvas1_result = document.getElementById('c1-result');
    var context1_resulr = canvas1_result.getContext('2d');
    var value1 = 0;
    var x = null;
    var y = null;
    var xMatrix = null;
    var yMatrix = null;
    image.src = '/content/mouse.jpg';
    $('.loader').hide();

    //When the image loads
    $(image).load(function () {
        //Resize canvas for image
        $("#c1").attr({
            width: image.width,
            height: image.height
        });
        x = image.width;
        y = image.height;

        context1.drawImage(image, 0, 0);
    });

    function convolute1() {
        $('.loader').show();
        setTimeout(() => { convoluteCompute(1) }, 300);
    }

    function convoluteCompute(index)
    {
        xMatrix = yMatrix = $('#m'+index+' > div').length;
        var cer = new Array(xMatrix);
        for (var i = 0; i < xMatrix; i++)
        {
            cer[i] = new Array(yMatrix);
            for (var j = 0; j < xMatrix; j++) {
                cer[i][j] = parseInt($($('#m' + index + ' > div')[i]).find('input')[j].value);
                //value1 = value1 + cer[i][j];
            }
        }
        $("#c1-result").attr({
            width: image.width - xMatrix ,
            height: image.height - yMatrix
        });

        for (var i = 0; i < image.width - xMatrix; i++) {
            for (var j = 0; j < image.height - yMatrix; j++) {

                var pixelData = 0;
                for (var k = 0; k < xMatrix; k++) {
                    for (var m = 0; m < yMatrix; m++) {
                        var color = context1.getImageData(i+k, j+m, 1, 1).data[0];
                        //console.log(color);
                        //console.log(cer[k][m]);
                        pixelData = pixelData + cer[k][m] * color;
                    }
                }
                var value1 = parseFloat(document.querySelector('#common'+ index).value);
                pixelData = pixelData / value1;

                var id = context1_resulr.createImageData(1, 1);
                var d = id.data;
                d[0] = pixelData;
                d[1] = pixelData;
                d[2] = pixelData;
                d[3] = 255;
                context1_resulr.putImageData(id, i, j);
            }
        }

        $('.loader').hide();

    }


</script>
<script src="~/Scripts/main.js"></script>